getwd()
q("no")
ls()
getwd()
load(".RData")
ls()
q("no")
setwd("~/Dropbox/works/Case_studies_in_stat/R.WD/inequality/")
load("inequality_vs_social_problems.rda")
ls()
head(international.inequality)
index.10<-international.inequality[,2:11]
head(index.10)
index.10<-international.inequality[,3:12]
head(index.10)
install.packages("factanal")
?factanal
factanal(index.10)
index.10
?factanal
princomp(index.10)
international.inequality[,1]
international.inequality[,1:2]
order(international.inequality[,2])
international.inequality[,1:2][order(international.inequality[,2])]
international.inequality[,1][order(international.inequality[,2])]
international.inequality[order(international.inequality[,2],1:2]
international.inequality[order(international.inequality[,2]),1:2]
international.inequality==NA
international.inequality
?is.na
is.na(international.inequality)
international.inequality[c(18,23),1]
international.inequality[,1]is.na(international.inequality)
international.inequality[,1][is.na(international.inequality)]
international.inequality[is.na(international.inequality)[,2],1]
international.inequality[is.na(international.inequality)[,3],1]
international.inequality[is.na(international.inequality)[,4],1]
international.inequality[is.na(international.inequality)[,5],1]
international.inequality[is.na(international.inequality)[,6],1]
international.inequality[is.na(international.inequality)[,7],1]
international.inequality[is.na(international.inequality)[,8],1]
international.inequality[is.na(international.inequality)[,9],1]
international.inequality[is.na(international.inequality)[,10],1]
international.inequality[is.na(international.inequality)[,11],1]
international.inequality[is.na(international.inequality)[,12],1]
international.inequality[is.na(international.inequality)[,13],1]
international.inequality[is.na(international.inequality)[,14],1]
international.inequality[is.na(international.inequality)[,15],1]
international.inequality[is.na(international.inequality)[,16],1]
international.inequality[is.na(international.inequality)[,17],1]
international.inequality[is.na(international.inequality)[,18],1]
international.inequality[is.na(international.inequality)[,19],1]
international.inequality[is.na(international.inequality)[,20],1]
international.inequality[is.na(international.inequality)[,21],1]
international.inequality[is.na(international.inequality)[,22],1]
international.inequality[is.na(international.inequality)[,23],1]
international.inequality[is.na(international.inequality)[,24],1]
international.inequality[is.na(international.inequality)[,25],1]
international.inequality[is.na(international.inequality)[,26],1]
international.inequality[is.na(international.inequality)[,27],1]
international.inequality[is.na(international.inequality)[,28],1]
international.inequality[is.na(international.inequality)[,29],1]
international.inequality[is.na(international.inequality)[,30],1]
?mapply
?aggregate
?by
?mapply
dim(international.inequality)
?rep
country<-international.inequality[,1]
country
rep(country,dim(international.inequality)[2])
matrix(rep(country,times=dim(international.inequality)[2]),byrow=T,ncol=international.inequality)[2])
matrix(rep(country,times=dim(international.inequality)[2]),byrow=T,ncol=international.inequality[2])
matrix(rep(country,times=dim(international.inequality)[2]),byrow=T,ncol=dim(international.inequality)[2])
matrix(rep(country,times=dim(international.inequality)[2]),ncol=dim(international.inequality)[2])
matrix(rep(country,times=dim(international.inequality)[2]),ncol=dim(international.inequality)[2])[is.na(international.inequality)]
?sem
help.packages("sem")
?packages
??packages
?help
help(package="sem")
install.packages("sem")
help(package="sem")
?mapply
mapply(rep, 1:4,4;1)
mapply(rep, 1:4,4:1)
apply(is.na(international.inequality),2,ifelse(TRUE,country,FALSE))
country
?ifelse
ifelse(is.na(international.inequality))[,4],country,FALSE)
ifelse(is.na(international.inequality)[,4],country,FALSE)
ifelse(is.na(international.inequality)[,5],country,FALSE)
ifelse(is.na(international.inequality)[,7],country,FALSE)
ifelse(is.na(international.inequality)[,6],country,FALSE)
apply(is.na(international.inequality),2,ifelse(,country,FALSE))
?apply
?ifelse
apply(is.na(international.inequality),2,counts)
apply(is.na(international.inequality),2,count)
apply(is.na(international.inequality),2,sum)
apply(is.na(international.inequality),2,which)
apply(is.na(international.inequality),2,country[which])
?'[]'
?'['
apply(is.na(international.inequality),2,'[',country)
country[is.na(international.inequality)]
country[is.na(international.inequality)[,2]]
country[is.na(international.inequality)[,3]]
country[is.na(international.inequality)[,6]]
country.NA<-is.na(international.inequality)
country[country.NA[,6]]
apply(country.NA,2,which)
lapply(country.NA,2,which)
apply(country.NA,2,which)$Police
country[apply(country.NA,2,which)$Police]
?lapply
lapply(apply(country.NA,2,which),'[',country)
lapply(apply(country.NA,2,which),sum)
lapply(apply(country.NA,2,which),'[]',country)
?'['
country[3]
'['(country,3)
lapply(apply(country.NA,2,which),'[',country)
country[apply(country.NA,2,which)$Police]
'['(country,apply(country.NA,2,which)$Police)
sum(3,4)
'sum'(3,4)
?apply
apply(country.NA,2,which)[,3]
apply(country.NA,2,ifelse(.,country,FALSE))
apply(country.NA,2,ifelse(...,country,FALSE))
apply(country.NA,2,ifelse(country.NA,country,FALSE))
ifelse
?ifelse
apply(international.inequality,2,ifelse(is.na,country,FALSE))
ifelse(is.na(international.inequality),country,FALSE)
any(ifelse(is.na(international.inequality),country,FALSE)$Lone.parents)
any(is.na(international.inequality)$Lone.parents)
is.na(international.inequality)
names(international.inequality)
?any
is.na(international.inequality)$Lone.parents
is.na(international.inequality$Lone.parents)
str(international.inequality)
any(is.na(international.inequality$Lone.parents))
apply(country.NA,2,any)
table(apply(country.NA,2,any))
apply(country.NA[-c(11,18),],2,any)
table(apply(country.NA[-c(11,18),],2,any))
which(apply(country.NA[-c(11,18),],2,any))
data.reduced<-international.inequality[-c(11,18),-c(7,8,12,14,19,20,22,26,29)]
str(data.reduced)
data.working<-data.reduced[,-c(1,10)]
str(data.working)
prcomp(data.working)
prcomp(data.working,scale=TRUE)
summary(prcomp(data.working,scale=TRUE))
plot(prcomp(data.working,scale=TRUE))
factanal(x=data.working,factors=7)
factanal(x=data.working,factors=6)
?factanal
factanal(x=data.working,factors=7,rotate="varimax")
factanal(x=data.working,factors=7,rotation="varimax")
factanal(x=data.working,factors=6,rotation="varimax")
plot(data.working[,1],datat.working[,14])
plot(data.working[,1],data.working[,14])
cor(data.working[,1],data.working[,14])
prcomp(data.working[,-1],scale=TRUE)
summary(prcomp(data.working[,-1],scale=TRUE))
factanal(x=data.working[,-1],factors=7)
factanal(x=data.working[,-1],factors=6)
prcomp(data.working[,-c(1,14)],scale=TRUE)
summary(prcomp(data.working[,-c(1,14)],scale=TRUE))
summary(prcomp(data.working[,-c(1,9:17)],scale=TRUE))
factanal(x=data.working[,-1],factors=4)
factanal(x=data.working[,-c(1,9:17)],factors=4)
factanal(x=data.working[,-c(1,9:17)],factors=5)
summary(prcomp(data.working[,-1],scale=TRUE))
princomp(data.working[,-1],scale=TRUE)
?princomp
summary(princomp(data.working[,-1]))
pca.fit<-princomp(data.working[,-1])
loadings(pca.fit)
plot(pca.fit,type="l")
pca.fit$scores
biplot(pca.fit)
install.packages(psych)
install.packages("psych")
library(psych)
?factor.pa
fa(data.working[,-1])
fa(data.working[,-1],nfactors=4)
fa(data.working[,-1],nfactors=3)
install.packages("GPArotation")
fa(data.working[,-1],nfactors=3)
install.packages("nFactors")
library(nFactors)
ifelse(is.na(international.inequality),country,F)
help(package="psych")
help(package="nFactor")
help(package="nFactors")
?nFactors
data.working
plot(data.working[,1],data.working[,2])
plot(data.working[,1],data.working[,3])
plot(data.working[,1],data.working[,4])
plot(data.working[,1],data.working[,5])
cor(data.working[,1],data.working[,5])
cor(data.working[,1],data.working[,6])
cor(data.working[,1],data.working[,7])
cor(data.working[,1],data.working[,8])
cor(data.working[,1],data.working[,9])
cor(data.working[,1],data.working[,10])
cor(data.working[,1],data.working[,11])
cor(data.working[,1],data.working[,12])
cor(data.working[,1],data.working[,13])
cor(data.working[,1],data.working[,14])
cor(data.working[,1],data.working[,15])
cor(data.working[,1],data.working[,16])
cor(data.working[,1],data.working[,17])
cor(data.working[,1],data.working[,18])
?princomp
summary(princomp(data.working[,-1]))
factanal(data.working[,-1],factors=1)
biplot(princomp(data.working[,-1]))
plot(princomp(data.working[,-1]))
?FactoMine
?FactorMine
?FactorMiner
help(package="FactoMineR")
?FAMD
library("FactorMineR")
library("FactoMineR")
library(FactoMineR)
library(FactorMineR)
help(package="FactorMineR")
help(package="FactoMineR")
library(FactoMineR)
library("FactoMineR")
install.packages("FactoMineR")
library("FactoMineR")
?FAMD
fa(data.working[,-1],nfactors=1,fm="pa")
fa(data.working[,-1],nfactors=2,fm="pa")
?describe
describe(data.working[,-1])
fa.parallel(data.working[,-1])
